apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        ocr_release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "com.example.shinelon.ocrcamera"
        minSdkVersion 18
        targetSdkVersion 25
        versionCode 5
        versionName "1.1.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.ocr_release
            zipAlignEnabled true

        }
        debug {
        }
    }
}
repositories{
    flatDir{
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'
    compile 'com.android.support:appcompat-v7:25.3.0'
    compile 'junit:junit:4.12'
    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    compile files('libs/ocr-sdk.jar')
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.alibaba:fastjson:1.2.34'
    compile 'com.android.support:recyclerview-v7:25.3.0'
}
